
server {
	#listen   80; ## listen for ipv4; this line is default and implied
	#listen   [::]:80 default ipv6only=on; ## listen for ipv6

	root /usr/share/nginx/www;
	index index.html index.htm;

	# Make site accessible from http://localhost/
	server_name localhost;

        # %NARINCLUDE
        location /services {
                root /kb/docs;
                autoindex on;
        }

	location /doc {
		root /usr/share;
		autoindex on;
		allow 127.0.0.1;
		deny all;
	}

	location /images {
		root /usr/share;
		autoindex off;
	}

        # TODO: remove hard-coded communities section
        location /services/communities/ {
                sub_filter api.metagenomics.anl.gov kbase.us/services/communities;
                sub_filter_once off;
                sub_filter_types application/json;
                if ( $request_filename ~ api.html ) {
                   rewrite ^ http://kbase.us/services/communities/api.kbase.html permanent;
                }
                proxy_pass http://api.metagenomics.anl.gov/;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            #proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
 	#location /services/awe {
        #    proxy_pass http://awe:7108/;
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_set_header Host $http_host;
        #    proxy_set_header X-Forwarded-Proto $scheme;
        #}
        #%BEGIN%
        #%END%
 	location /services/ {
            proxy_pass http://router:5000/services/;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

 	location /kill/ {
            proxy_pass http://router:5000/kill/;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        #%INCLUDE%

}


# HTTPS server
#
server {
	listen 443;
	server_name localhost;

	ssl on;
	ssl_certificate /etc/nginx/ssl/proxy.crt;
	ssl_certificate_key /etc/nginx/ssl/proxy.key;

	ssl_session_timeout 5m;

	ssl_protocols SSLv3 TLSv1;
	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
	ssl_prefer_server_ciphers on;

        root /usr/share/nginx/www;
        index index.html index.htm;

        # Make site accessible from http://localhost/
        server_name localhost;

        # %NARINCLUDE
        #location /services {
        #        root /kb/docs;
        #        autoindex on;
        #}

        location /doc {
                root /usr/share;
                autoindex on;
                allow 127.0.0.1;
                deny all;
        }

        location /images {
                root /usr/share;
                autoindex off;
        }

        # TODO: remove hard-coded communities section
        location /services/communities/ {
                sub_filter api.metagenomics.anl.gov kbase.us/services/communities;
                sub_filter_once off;
                sub_filter_types application/json;
                if ( $request_filename ~ api.html ) {
                   rewrite ^ http://kbase.us/services/communities/api.kbase.html permanent;
                }
                proxy_pass http://api.metagenomics.anl.gov/;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            #proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        #%BEGIN%
        #%END%
 	location /services/ {
            proxy_pass http://router:5000/services/;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

	#%SSLINCLUDE%
}
